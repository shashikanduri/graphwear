{"version":3,"file":"static/js/689.a7aa7de7.chunk.js","mappings":"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","sources":["components/container/MainContainer.jsx","utility/Utility.js","pages/HomePage.jsx"],"sourcesContent":["const MainContainer = ({\n  children,\n  header = \" \",\n  onEdit,\n  isDisable = false,\n  disableReason = \"Not Allowed\",\n}) => {\n  return (\n    <div\n      className={`w-full bg-white px-4 md:px-8 rounded-xl`}\n    >\n      {header && (\n        <div className=\"flex items-end gap-[5px] mb-8\">\n          <h2 className=\"font-bold text-xl md:text-2xl\">{header}</h2>\n          {onEdit && (\n            <p\n              className={`text-xl font-bold ${\n                isDisable\n                  ? \"cursor-not-allowed text-gray-500\"\n                  : \"cursor-pointer text-accent hover:text-amber-700 duration-100\"\n              }`}\n              onClick={isDisable ? () => {} : onEdit}\n              title={isDisable ? disableReason : \"\"}\n            >\n              (edit)\n            </p>\n          )}\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport default MainContainer;\n","import { createTheme } from \"@mui/material\";\n\nexport const DATE_TIME_FORMAT_1 = \"MM/dd/yyyy HH:mm:ss\";\nexport const DATE_FORMAT_1 = \"yyyy-MM-dd\";\nexport const DATE_FORMAT_2 = \"MM/dd/yyyy\";\n\nexport const formatLabel = (label) => {\n  const match = label.match(/(.*) \\((.*)\\)/);\n  if (match) {\n    return (\n      <div className=\"flex items-center gap-[5px]\">\n        <h3 className=\"font-bold\">{match[1]}</h3>\n        <span>({match[2]})</span>\n      </div>\n    );\n  }\n  return <h3 className=\"font-bold\">{label}</h3>;\n};\n\n\nexport const materialReactTableThemeDark = createTheme({\n  components: {\n    MuiIconButton: {\n      styleOverrides: {\n        root: {\n          \"& .MuiSvgIcon-root\": {\n            color: \"#ffffff !important\",\n          },\n          \"&:hover .MuiSvgIcon-root\": {\n            color: \"#ffffff !important\",\n          },\n          \"&.Mui-active .MuiSvgIcon-root\": {\n            color: \"#ffffff !important\",\n          },\n        },\n      },\n    },\n    MuiTableSortLabel: {\n      styleOverrides: {\n        root: {\n          \"& .MuiSvgIcon-root\": {\n            color: \"#ffffff !important\",\n          },\n          \"&:hover .MuiSvgIcon-root\": {\n            color: \"#ffffff !important\",\n          },\n          \"&.Mui-active .MuiSvgIcon-root\": {\n            color: \"#ffffff !important\",\n          },\n        },\n      },\n    },\n  },\n});\n\nexport const materialReactTableThemeLight = createTheme({\n  components: {\n    MuiIconButton: {\n      styleOverrides: {\n        root: {\n          \"& .MuiSvgIcon-root\": {\n            color: \"#707070 !important\",\n          },\n        },\n      },\n    },\n    MuiTableSortLabel: {\n      styleOverrides: {\n        root: {\n          \"& .MuiSvgIcon-root\": {\n            color: \"#707070 !important\",\n          },\n          \"&:hover .MuiSvgIcon-root\": {\n            color: \"#ffffff !important\",\n          },\n          \"&.Mui-active .MuiSvgIcon-root\": {\n            color: \"#707070 !important\",\n          },\n        },\n      },\n    },\n  },\n});\n\n// to check empty and \"\" string\nexport const isNotEmptyOrNull = (obj, key) => {\n  // Check if obj is a string\n  if (typeof obj === \"string\") {\n    return obj.trim().length > 0 && obj !== \"null\";\n  }\n\n  // Check if obj is an object and not null\n  if (typeof obj !== \"object\" || obj === null) {\n    return false;\n  }\n\n  // Check if the key exists in the object\n  if (!(key in obj)) {\n    return false;\n  }\n\n  const value = obj[key];\n\n  // Check if the value is not null and not undefined\n  if (value === null || value === undefined) {\n    return false;\n  }\n\n  // Check if the value is a non-empty string\n  if (typeof value === \"string\") {\n    return value.trim().length > 0;\n  }\n\n  // For other types, consider them as not empty\n  return true;\n};\n\nexport const customDateFilter = (row, columnId, filterValue) => {\n  const cellValue = row.getValue(columnId);\n  return cellValue?.includes(filterValue) ?? false;\n};\n\nexport const formatDate = (inputDateString, type) => {\n  if (!inputDateString) return \"\";\n  const dateObject = new Date(inputDateString);\n\n  // Adjust for time zone offset\n  const userTimezoneOffset = dateObject.getTimezoneOffset() * 60000;\n  const localDateObject = new Date(dateObject.getTime() + userTimezoneOffset);\n\n  if (type === DATE_TIME_FORMAT_1)\n    return `${(localDateObject.getMonth() + 1)\n      .toString()\n      .padStart(2, \"0\")}/${localDateObject\n      .getDate()\n      .toString()\n      .padStart(2, \"0\")}/${localDateObject.getFullYear()} ${localDateObject\n      .getHours()\n      .toString()\n      .padStart(2, \"0\")}:${localDateObject\n      .getMinutes()\n      .toString()\n      .padStart(2, \"0\")}:${localDateObject\n      .getSeconds()\n      .toString()\n      .padStart(2, \"0\")}`;\n  else if (type === DATE_FORMAT_1)\n    return `${localDateObject.getFullYear()}-${(localDateObject.getMonth() + 1)\n      .toString()\n      .padStart(2, \"0\")}-${localDateObject\n      .getDate()\n      .toString()\n      .padStart(2, \"0\")}`;\n  else if (type === DATE_FORMAT_2)\n    return localDateObject.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n    });\n};\n\n\nexport const downloadCSV = (sensorId, data) => {\n  if (!data.length) return;\n\n  const headers = Object.keys(data[0]);\n  const rows = data.map(row => headers.map(h => JSON.stringify(row[h] ?? \"\")));\n\n  const csvContent = [headers, ...rows].map(e => e.join(\",\")).join(\"\\n\");\n  const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\n\n  const link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.setAttribute(\"download\", `${sensorId}_data.csv`);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n","import React, { useEffect, useState } from \"react\";\nimport { collection, query, where, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\nimport MainContainer from \"../components/container/MainContainer\";\nimport { Box, FormControl, InputLabel, MenuItem, Select, OutlinedInput, Checkbox, ListItemText } from \"@mui/material\";\nimport { LineChart } from \"@mui/x-charts/LineChart\";\nimport dayjs from \"dayjs\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { downloadCSV } from \"../utility/Utility\";\nimport { FaDownload } from \"react-icons/fa6\";\n\nconst WaterSystemPage = () => {\n  // get users from outlet context higher in the component tree\n  const { users } = useOutletContext()\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [sensorData, setSensorData] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [sensorOptions, setSensorOptions] = useState(['Sensor 1', 'Sensor 2']);\n  const [selectedSensors, setSelectedSensors] = useState([])\n  \n  // useEffect\n  useEffect(() => {\n\n    if (!selectedUsers) return;\n    let unsubscribeSensorData;\n\n    if (selectedUsers.length > 0) {\n      // Default to the first two sensors\n      if (selectedSensors.length === 0) setSelectedSensors(sensorOptions);\n\n      setIsLoading(true);\n  \n      const q = query(\n        collection(db, \"lactate_data\"),\n        where(\"user_name\", \"in\", selectedUsers.slice(0, 10))\n      );\n    \n      unsubscribeSensorData = onSnapshot(\n        q,\n        (querySnapshot) => {\n          let data = [];\n    \n          querySnapshot.forEach((doc) => {\n            const rawData = doc.data();\n    \n            if (typeof rawData.timestamp === \"number\") {\n              rawData.timestamp = new Date(rawData.timestamp * 1000).toISOString();\n            }\n            data.push(rawData);\n          });\n    \n          data = data.filter((d) => selectedSensors.includes(d.sensor_id));\n          data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n          setSensorData(data);\n          setIsError(false);\n          setIsLoading(false);\n        },\n        (error) => {\n          console.error(\"Error fetching filtered data:\", error);\n          setIsError(true);\n          setIsLoading(false);\n        }\n      );\n    }\n\n    setIsLoading(false);\n    return () => {\n      if (unsubscribeSensorData) unsubscribeSensorData();\n    };\n  }, [selectedUsers, selectedSensors]);\n\n  // get lactate series\n  const getSensorSeries = (sensorId, lactateKey) => {\n    return sensorData\n      .filter((d) => d.sensor_id === sensorId)\n      .map((d) => d[lactateKey]);\n  };\n\n  // timsetamps for x axis\n  const getSensorTimestampsAsDates = (sensorId) => {\n    return sensorData\n      .filter((d) => d.sensor_id === sensorId)\n      .map((d) => new Date(d.timestamp));\n  };\n  \n  // 3 charts for each sensor\n  const renderChartsForSensor = (sensorId) => {\n\n    // get the last measurement\n    const latestData = sensorData\n      .filter((d) => d.sensor_id === sensorId)\n      .at(-1); // Latest reading for this sensor\n\n    const chartData = sensorData.filter((d) => d.sensor_id === sensorId);\n  \n    return (\n      <React.Fragment key={sensorId}>\n        <div className=\"mt-10 mb-4\">\n          <div className=\"flex justify-between\">\n            <h2 className=\"text-2xl font-semibold text-Black-400 pb-4\">{sensorId}</h2>\n            <FaDownload \n              className=\"cursor-pointer\"\n              onClick={() => downloadCSV(sensorId, chartData)}\n            />\n          </div>\n          {latestData && (\n            <div className=\"grid grid-cols-3 gap-4 text-gray-700 pb-2 border-b\">\n              <p>Temperature:<b className=\"pl-2\">{latestData.temperature}</b></p>\n              <p>Connection Status:<b className=\"pl-2\">{`${latestData.connection_status_flag}`}</b></p>\n              <p>Wear Status:<b className=\"pl-2\">{`${latestData.wearing_status_flag}`}</b></p>\n            </div>\n        )}\n        </div>\n  \n        {/* Channel 1 */}\n        <div className=\"w-full overflow-x-auto\">\n          <div className=\"min-w-[800px]\">\n            <LineChart\n              margin={{ left: 0, top: 20, right: 20, bottom: 30 }}\n              height={300}\n              series={[{ data: getSensorSeries(sensorId, \"ohm1\"), label: \"Lactate\", showMark: false }]}\n              xAxis={[\n                {\n                  scaleType: \"time\",\n                  data: getSensorTimestampsAsDates(sensorId),\n                },\n              ]}\n              tooltip={{\n                valueFormatter: (value, context) =>\n                  `Time: ${dayjs(context.dataIndex !== undefined ? getSensorTimestampsAsDates(sensorId)[context.dataIndex] : \"\").format(\"YYYY-MM-DD HH:mm:ss\")}`,\n              }}   \n            />\n          </div>\n        </div>\n        <h3 className=\"text-lg text-black mt-8 pb-4 text-center\">Lactate (Channel 1) : <b className=\"pb-4\">{latestData?.ohm1 ?? \"\"}</b></h3>\n  \n        <hr className=\"border-t border-gray-300 my-8 w-full\" />\n  \n        {/* Channel 2 */}\n        <div className=\"w-full overflow-x-auto\">\n          <div className=\"min-w-[800px]\">\n            <LineChart\n              margin={{ left: 0, top: 20, right: 20, bottom: 30 }}\n              height={300}\n              series={[{ data: getSensorSeries(sensorId, \"ohm3\"), label: \"Lactate\", showMark: false }]}\n              xAxis={[\n                {\n                  scaleType: \"time\",\n                  data: getSensorTimestampsAsDates(sensorId),\n                },\n              ]}\n              tooltip={{\n                valueFormatter: (value, context) =>\n                  `Time: ${dayjs(context.dataIndex !== undefined ? getSensorTimestampsAsDates(sensorId)[context.dataIndex] : \"\").format(\"YYYY-MM-DD HH:mm:ss\")}`,\n              }}   \n            />\n          </div>\n        </div>\n        <h3 className=\"text-lg text-black mt-8 pb-4 text-center\">Lactate (Channel 2) : <b className=\"pb-4\">{latestData?.ohm1 ?? \"\"}</b></h3>\n  \n        <hr className=\"border-t border-gray-300 my-8 w-full\" />\n  \n        {/* Channel 3 */}\n        <div className=\"w-full overflow-x-auto\">\n          <div className=\"min-w-[800px]\">\n            <LineChart\n              margin={{ left: 0, top: 20, right: 20, bottom: 30 }}\n              height={300}\n              series={[{ data: getSensorSeries(sensorId, \"ohm3\"), label: \"Lactate\", showMark: false }]}\n              xAxis={[\n                {\n                  scaleType: \"time\",\n                  data: getSensorTimestampsAsDates(sensorId),\n                },\n              ]}\n              tooltip={{\n                valueFormatter: (value, context) =>\n                  `Time: ${dayjs(context.dataIndex !== undefined ? getSensorTimestampsAsDates(sensorId)[context.dataIndex] : \"\").format(\"YYYY-MM-DD HH:mm:ss\")}`,\n              }}        \n            />\n          </div>\n        </div>\n        <h3 className=\"text-lg text-black mt-8 pb-4 text-center\">Lactate (Channel 3) : <b className=\"pb-4\">{latestData?.ohm1 ?? \"\"}</b></h3>\n\n      </React.Fragment>\n    );\n  };\n  \n  \n\n  return (\n    <>\n      <div className=\"py-8 flex flex-col space-y-2 md:items-baseline md:flex-row md:justify-between\">\n        <h1 className=\"text-2xl md:text-3xl font-bold\">Sensor Data Charts</h1>\n      </div>\n      <Box className=\"w-full flex items-center justify-between mb-4 flex-wrap gap-4\">\n        <div className=\"flex gap-4 flex-wrap\">\n          {/* User Name Filter */}\n          <FormControl sx={{ minWidth: 250 }}>\n            <InputLabel>User Name</InputLabel>\n            <Select\n              value={selectedUsers}\n              onChange={(e) => setSelectedUsers([e.target.value])}\n              input={<OutlinedInput label=\"User Name\" />}\n              renderValue={(selected) => selected.join(', ')}\n            >\n              {users.map((name) => (\n                <MenuItem key={name} value={name}>\n                  <ListItemText primary={name} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          {/* Sensor ID Filter */}\n          {\n            selectedUsers.length > 0 &&\n            <FormControl sx={{ minWidth: 250 }}>\n              <InputLabel>Sensor ID</InputLabel>\n              <Select\n                multiple\n                value={selectedSensors}\n                onChange={(e) => setSelectedSensors(e.target.value)}\n                input={<OutlinedInput label=\"Sensor ID\" />}\n                renderValue={(selected) => selected.join(', ')}\n              >\n                {sensorOptions.map((sensor) => (\n                  <MenuItem key={sensor} value={sensor}>\n                    <Checkbox checked={selectedSensors.includes(sensor)} />\n                    <ListItemText primary={sensor} />\n                  </MenuItem>\n                ))}\n              </Select>\n          </FormControl>\n          }\n        </div>\n\n        <button\n          onClick={() => {\n            downloadCSV(\"combined_sensor_data\", sensorData);\n          }}\n          className=\"text-sm bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md\"\n        >\n          Download User Data\n        </button>\n      </Box>\n\n\n\n      {isLoading ? (\n        <MainContainer>\n          <LoadingSpinner size=\"40px\" className=\"h-[223px]\" />\n        </MainContainer>\n      ) : isError ? (\n        <MainContainer>\n          <p className=\"text-red-500\">Failed to load data.</p>\n        </MainContainer>\n      ) : selectedUsers.length === 0 || selectedSensors.length === 0? (\n        <MainContainer>\n          <p className=\"text-black text-lg pb-10\">👋 Select a user to view sensor data.</p>\n        </MainContainer>\n      ) : (\n        <MainContainer>\n          {selectedSensors.map(renderChartsForSensor)}\n        </MainContainer>\n      )}\n    </>\n  );\n};\n\nexport default WaterSystemPage;\n"],"names":["_ref","children","header","onEdit","isDisable","disableReason","_jsxs","className","_jsx","onClick","title","createTheme","components","MuiIconButton","styleOverrides","root","color","MuiTableSortLabel","downloadCSV","sensorId","data","length","headers","Object","keys","rows","map","row","h","_row$h","JSON","stringify","csvContent","e","join","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","WaterSystemPage","users","useOutletContext","isLoading","setIsLoading","useState","isError","setIsError","sensorData","setSensorData","selectedUsers","setSelectedUsers","sensorOptions","setSensorOptions","selectedSensors","setSelectedSensors","useEffect","unsubscribeSensorData","q","query","collection","db","where","slice","onSnapshot","querySnapshot","forEach","doc","rawData","timestamp","Date","toISOString","push","filter","d","includes","sensor_id","sort","a","b","error","console","getSensorSeries","lactateKey","getSensorTimestampsAsDates","_Fragment","Box","FormControl","sx","minWidth","InputLabel","Select","value","onChange","target","input","OutlinedInput","label","renderValue","selected","name","MenuItem","ListItemText","primary","multiple","sensor","Checkbox","checked","MainContainer","LoadingSpinner","size","_latestData$ohm","_latestData$ohm2","_latestData$ohm3","latestData","at","chartData","React","FaDownload","temperature","connection_status_flag","wearing_status_flag","LineChart","margin","left","top","right","bottom","height","series","showMark","xAxis","scaleType","tooltip","valueFormatter","context","dayjs","undefined","dataIndex","format","ohm1"],"sourceRoot":""}