{"version":3,"file":"static/js/704.118ff36d.chunk.js","mappings":"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","sources":["firebase.js","components/container/MainContainer.jsx","components/tables/tableStyles.js","components/tables/DisplayTablePagination.jsx","utility/Utility.js","components/ui/SensorDataInfo.jsx","pages/HomePage.jsx"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDgHlTPj49gm-TFuh0SrzIUhmq-pYw-ifw\",\r\n    authDomain: \"graphware-1761f.firebaseapp.com\",\r\n    projectId: \"graphware-1761f\",\r\n    storageBucket: \"graphware-1761f.firebasestorage.app\",\r\n    messagingSenderId: \"975460401347\",\r\n    appId: \"1:975460401347:web:f863efc8eb9a5b066c2276\",\r\n    measurementId: \"G-ZRCBDTJ827\"\r\n  };\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);","const MainContainer = ({\r\n  children,\r\n  header = \" \",\r\n  onEdit,\r\n  isDisable = false,\r\n  disableReason = \"Not Allowed\",\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`w-full bg-white px-4 md:px-8 rounded-xl`}\r\n    >\r\n      {header && (\r\n        <div className=\"flex items-end gap-[5px] mb-8\">\r\n          <h2 className=\"font-bold text-xl md:text-2xl\">{header}</h2>\r\n          {onEdit && (\r\n            <p\r\n              className={`text-xl font-bold ${\r\n                isDisable\r\n                  ? \"cursor-not-allowed text-gray-500\"\r\n                  : \"cursor-pointer text-accent hover:text-amber-700 duration-100\"\r\n              }`}\r\n              onClick={isDisable ? () => {} : onEdit}\r\n              title={isDisable ? disableReason : \"\"}\r\n            >\r\n              (edit)\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","export const fontSize = {\r\n  xs: \"10px\",\r\n  sm: \"11px\",\r\n  md: \"12px\",\r\n  lg: \"13px\",\r\n  xl: \"14px\",\r\n};\r\n\r\nexport const addButtonTextStyle = {\r\n  color: \"white\",\r\n  fontWeight: \"normal\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nexport const tableColumnWrap = (size = \"200px\") => ({\r\n  width: size,\r\n  whiteSpace: \"pre-wrap\",\r\n  overflowWrap: \"anywhere\",\r\n});\r\n","import { Box, ThemeProvider } from \"@mui/material\";\r\nimport { createTheme } from \"@mui/material\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport {\r\n  MaterialReactTable,\r\n  useMaterialReactTable,\r\n} from \"material-react-table\";\r\nimport { useRef } from \"react\";\r\nimport Button from \"../ui/Button\";\r\nimport { fontSize } from \"./tableStyles\";\r\n\r\nconst DisplayTablePagination = ({\r\n  tableData,\r\n  columns,\r\n  keyName = \"id\",\r\n  handleBottomButton = () => {},\r\n  showBottomButton = false,\r\n  showFullScreenOption = true,\r\n  initialState = {},\r\n  newButtonName = \"Save\",\r\n  paginationProps = {\r\n    rowsPerPageOptions: [5],\r\n    showRowsPerPage: false,\r\n  },\r\n  onRowClick = null,\r\n  enablePagination = true,\r\n  enableColumnOrdering = false,\r\n  enableHiding = false,\r\n  enableColumnResizing = false,\r\n  maxHeight = \"auto\",\r\n  isBottomButtonDisable = false,\r\n  renderPanel = null,\r\n  topButton = {\r\n    showTopButton: false,\r\n    handleTopButton: () => {},\r\n    value: 0,\r\n  },\r\n}) => {\r\n  const rowVirtualizerInstanceRef = useRef(null);\r\n\r\n  const materialReactTableThemeLight = createTheme({\r\n    components: {\r\n      MuiIconButton: {\r\n        styleOverrides: {\r\n          root: {\r\n            \"& .MuiSvgIcon-root\": {\r\n              color: \"#707070 !important\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      MuiTableSortLabel: {\r\n        styleOverrides: {\r\n          root: {\r\n            \"& .MuiSvgIcon-root\": {\r\n              color: \"#707070 !important\",\r\n            },\r\n            \"&:hover .MuiSvgIcon-root\": {\r\n              color: \"#ffffff !important\",\r\n            },\r\n            \"&.Mui-active .MuiSvgIcon-root\": {\r\n              color: \"#707070 !important\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const table = useMaterialReactTable({\r\n    columns: columns,\r\n    data: tableData,\r\n\r\n    getRowId: (row) => row[keyName],\r\n\r\n    initialState: {\r\n      density: \"compact\",\r\n      ...initialState,\r\n    },\r\n\r\n    enableColumnActions: true,\r\n    enableDensityToggle: false,\r\n    enableFilters: true,\r\n    enableHiding: enableHiding,\r\n\r\n    //sticky header and footer feature allows you to keep the header and footer of the table visible while scrolling through the table\r\n    enableStickyHeader: true,\r\n    enableStickyFooter: true,\r\n\r\n    enablePagination: enablePagination,\r\n    enableFullScreenToggle: showFullScreenOption,\r\n    enableTopToolbar: true,\r\n    enableBottomToolbar: true,\r\n    enableColumnOrdering: enableColumnOrdering,\r\n    enableColumnResizing: enableColumnResizing,\r\n    maxHeight: maxHeight,\r\n\r\n    ...(enablePagination\r\n      ? { paginationDisplayMode: \"pages\" }\r\n      : {\r\n          enableRowVirtualization: true,\r\n          rowVirtualizerInstanceRef,\r\n          rowVirtualizerOptions: { overscan: 5 },\r\n        }),\r\n\r\n    //css for header\r\n    muiTableHeadCellProps: {\r\n      sx: {\r\n        fontWeight: \"bolder\",\r\n        fontSize: fontSize,\r\n        \".MuiDivider-root\": {\r\n          borderWidth: \"1px\",\r\n          opacity: \"0.5\",\r\n        },\r\n      },\r\n    },\r\n\r\n    //css for the table container\r\n    muiTablePaperProps: {\r\n      elevation: 0,\r\n      sx: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: \"5px\",\r\n      },\r\n    },\r\n\r\n    //css for the table data container\r\n    muiTableContainerProps: {\r\n      sx: { height: \"auto\", maxHeight: maxHeight },\r\n    },\r\n\r\n    //css for the table data\r\n    muiTableBodyProps: {\r\n      sx: () => ({\r\n        fontSize: fontSize,\r\n      }),\r\n    },\r\n\r\n    //css for table bottom bar\r\n    muiBottomToolbarProps: {\r\n      sx: {\r\n        ...(!showBottomButton && { justifyContent: \"end\" }), //when no add button available, align toolbar options on the right\r\n      },\r\n    },\r\n\r\n    //css for table top bar\r\n    muiTopToolbarProps: {\r\n      sx: {\r\n        ...(!topButton.showTopButton && { justifyContent: \"end\" }), //when no add button available, align toolbar options on the right\r\n      },\r\n    },\r\n\r\n    renderBottomToolbarCustomActions: () => {\r\n      return (\r\n        showBottomButton && (\r\n          <Button\r\n            isPrimaryButton={true}\r\n            onClick={handleBottomButton}\r\n            disabled={isBottomButtonDisable}\r\n          >\r\n            {newButtonName}\r\n          </Button>\r\n        )\r\n      );\r\n    },\r\n\r\n    renderTopToolbarCustomActions: ({ table }) => {\r\n      const filteredData = table.getFilteredRowModel().rows.map(row => row.original);\r\n    \r\n      return (\r\n        <div className=\"flex items-center gap-4\">\r\n          {topButton.showTopButton && (\r\n            <div\r\n              className=\"flex flex-row items-center justify-center gap-2 h-[39.94px] cursor-pointer\"\r\n              onClick={topButton.handleTopButton}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"cursor-pointer\"\r\n                checked={topButton.value}\r\n                readOnly\r\n              />\r\n              <span className=\"text-sm text-primary\">(Select All)</span>\r\n            </div>\r\n          )}\r\n          \r\n          <CSVLink\r\n            data={filteredData}\r\n            filename=\"filtered_table_data.csv\"\r\n            className=\"bg-blue-500 hover:bg-blue-600 text-white text-sm px-3 py-1.5 rounded\"\r\n          >\r\n            Download CSV\r\n          </CSVLink>\r\n        </div>\r\n      );\r\n    },\r\n    \r\n\r\n    //row action\r\n    ...(onRowClick && {\r\n      muiTableBodyRowProps: ({ row }) => ({\r\n        onClick: (event) => onRowClick(row),\r\n        sx: {\r\n          cursor: \"pointer\",\r\n        },\r\n      }),\r\n    }),\r\n\r\n    //pagination props\r\n    muiPaginationProps: {\r\n      rowsPerPageOptions: paginationProps?.rowsPerPageOptions ?? [5],\r\n      showFirstButton: false,\r\n      showLastButton: false,\r\n      showRowsPerPage: paginationProps?.showRowsPerPage ?? false,\r\n      siblingCount: 0,\r\n      size: \"small\",\r\n    },\r\n\r\n    ...(renderPanel && {\r\n      renderDetailPanel: ({ row }) => (\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {renderPanel(row)}\r\n        </Box>\r\n      ),\r\n    }),\r\n  });\r\n  return (\r\n    <ThemeProvider theme={materialReactTableThemeLight}>\r\n      <MaterialReactTable table={table} />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default DisplayTablePagination;\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nexport const DATE_TIME_FORMAT_1 = \"MM/dd/yyyy HH:mm:ss\";\r\nexport const DATE_FORMAT_1 = \"yyyy-MM-dd\";\r\nexport const DATE_FORMAT_2 = \"MM/dd/yyyy\";\r\n\r\nexport const formatLabel = (label) => {\r\n  const match = label.match(/(.*) \\((.*)\\)/);\r\n  if (match) {\r\n    return (\r\n      <div className=\"flex items-center gap-[5px]\">\r\n        <h3 className=\"font-bold\">{match[1]}</h3>\r\n        <span>({match[2]})</span>\r\n      </div>\r\n    );\r\n  }\r\n  return <h3 className=\"font-bold\">{label}</h3>;\r\n};\r\n\r\n\r\nexport const materialReactTableThemeDark = createTheme({\r\n  components: {\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"& .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n          \"&:hover .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n          \"&.Mui-active .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiTableSortLabel: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"& .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n          \"&:hover .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n          \"&.Mui-active .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const materialReactTableThemeLight = createTheme({\r\n  components: {\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"& .MuiSvgIcon-root\": {\r\n            color: \"#707070 !important\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiTableSortLabel: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"& .MuiSvgIcon-root\": {\r\n            color: \"#707070 !important\",\r\n          },\r\n          \"&:hover .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n          \"&.Mui-active .MuiSvgIcon-root\": {\r\n            color: \"#707070 !important\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\n// to check empty and \"\" string\r\nexport const isNotEmptyOrNull = (obj, key) => {\r\n  // Check if obj is a string\r\n  if (typeof obj === \"string\") {\r\n    return obj.trim().length > 0 && obj !== \"null\";\r\n  }\r\n\r\n  // Check if obj is an object and not null\r\n  if (typeof obj !== \"object\" || obj === null) {\r\n    return false;\r\n  }\r\n\r\n  // Check if the key exists in the object\r\n  if (!(key in obj)) {\r\n    return false;\r\n  }\r\n\r\n  const value = obj[key];\r\n\r\n  // Check if the value is not null and not undefined\r\n  if (value === null || value === undefined) {\r\n    return false;\r\n  }\r\n\r\n  // Check if the value is a non-empty string\r\n  if (typeof value === \"string\") {\r\n    return value.trim().length > 0;\r\n  }\r\n\r\n  // For other types, consider them as not empty\r\n  return true;\r\n};\r\n\r\nexport const customDateFilter = (row, columnId, filterValue) => {\r\n  const cellValue = row.getValue(columnId);\r\n  return cellValue?.includes(filterValue) ?? false;\r\n};\r\n\r\nexport const formatDate = (inputDateString, type) => {\r\n  if (!inputDateString) return \"\";\r\n  const dateObject = new Date(inputDateString);\r\n\r\n  // Adjust for time zone offset\r\n  const userTimezoneOffset = dateObject.getTimezoneOffset() * 60000;\r\n  const localDateObject = new Date(dateObject.getTime() + userTimezoneOffset);\r\n\r\n  if (type === DATE_TIME_FORMAT_1)\r\n    return `${(localDateObject.getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, \"0\")}/${localDateObject\r\n      .getDate()\r\n      .toString()\r\n      .padStart(2, \"0\")}/${localDateObject.getFullYear()} ${localDateObject\r\n      .getHours()\r\n      .toString()\r\n      .padStart(2, \"0\")}:${localDateObject\r\n      .getMinutes()\r\n      .toString()\r\n      .padStart(2, \"0\")}:${localDateObject\r\n      .getSeconds()\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  else if (type === DATE_FORMAT_1)\r\n    return `${localDateObject.getFullYear()}-${(localDateObject.getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, \"0\")}-${localDateObject\r\n      .getDate()\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  else if (type === DATE_FORMAT_2)\r\n    return localDateObject.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n    });\r\n};\r\n","import { isNotEmptyOrNull } from \"../../utility/Utility\";\r\nimport { formatLabel } from \"../../utility/Utility\";\r\nimport MainContainer from \"../container/MainContainer\";\r\nimport { formatDate, DATE_TIME_FORMAT_1 } from \"../../utility/Utility\"\r\n\r\nexport const SensorDataInfo = ({ data }) => {\r\n  const RenderData = (title, key, className = \"\") => {\r\n    const isNotEmpty = isNotEmptyOrNull(data, key);\r\n    \r\n    if (key === \"timestamp\"){\r\n      data[key] = formatDate(data[key], DATE_TIME_FORMAT_1);\r\n    }\r\n\r\n    return (\r\n      <div className={`flex flex-col ${className}`}>\r\n        <h3 className=\"font-bold\">{formatLabel(title)}</h3>\r\n        <p\r\n          className={`px-.5 py-2 font-normal ${\r\n            isNotEmpty ? \"text-gray-500\" : \"text-red-600\"\r\n          } whitespace-nowrap`}\r\n        >\r\n          {isNotEmpty ? `${data?.[key]}` : \"Missing\"}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <MainContainer header=\"Data Packet Information\">\r\n      <div className=\"grid xl:grid-cols-[repeat(4,1fr)] min-[1092px]:grid-cols-[repeat(3,1fr)] sm:grid-cols-[repeat(2,1fr)] gap-x-3 gap-y-0 \">\r\n        {RenderData(\"User\", \"user_name\")}\r\n        {RenderData(\"Sensor\", \"sensor_id\")}\r\n        {RenderData(\"Timestamp\", \"timestamp\")}\r\n\r\n        <hr className=\"col-[1/-1] my-2\" />\r\n\r\n        {RenderData(\"Lactate (Raw 1)\", \"raw1\")}\r\n        {RenderData(\"Lactate (Raw 2)\", \"raw2\")}\r\n        {RenderData(\"Lactate (Raw 3)\", \"raw3\")}\r\n\r\n        <hr className=\"col-[1/-1] my-2\" />\r\n\r\n        {RenderData(\"Ohm 1\", \"ohm1\")}\r\n        {RenderData(\"Ohm 2\", \"ohm2\")}\r\n        {RenderData(\"Ohm 3\", \"ohm3\")}\r\n\r\n        <hr className=\"col-[1/-1] my-2\" />\r\n\r\n        {RenderData(\"Temperature\", \"temperature\")}\r\n        {RenderData(\"Connection Status\", \"connection_status_flag\")}\r\n        {RenderData(\"Charging Status\", \"charging_status_flag\")}\r\n        {RenderData(\"Touch Status\", \"touch_status_flag\")}\r\n        {RenderData(\"Insertion Status\", \"insertion_status_flag\")}\r\n        {RenderData(\"Flag 4\", \"flag4\")}\r\n        {RenderData(\"Flag 5\", \"flag5\")}\r\n        {RenderData(\"Flag 6\", \"flag6\")}\r\n        {RenderData(\"Gain 0\", \"gain0\")}\r\n        {RenderData(\"Gain 1\", \"gain1\")}\r\n        {RenderData(\"Gain 2\", \"gain2\")}\r\n        {RenderData(\"Offset 0\", \"offset0\")}\r\n        {RenderData(\"Offset 1\", \"offset1\")}\r\n        {RenderData(\"offset 2\", \"offset2\")}\r\n        {RenderData(\"Header 1\", \"header1\")}\r\n        {RenderData(\"Header 2\", \"header2\")}\r\n\r\n      </div>\r\n    </MainContainer>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport { collection, onSnapshot } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\"; // Ensure this points to your Firestore setup\r\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\r\nimport MainContainer from \"../components/container/MainContainer\";\r\nimport DisplayTablePagination from \"../components/tables/DisplayTablePagination\";\r\nimport { SensorDataInfo } from \"../components/ui/SensorDataInfo\";\r\nimport { formatDate, DATE_TIME_FORMAT_1, customDateFilter } from \"../utility/Utility\"\r\n\r\nconst WaterSystemPage = () => {\r\n  const { setModal } = useOutletContext();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [sensorData, setSensorData] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(\r\n      collection(db, \"lactate_data\"),\r\n      (querySnapshot) => {\r\n        const newData = [];\r\n\r\n        // adding new records to the top\r\n        querySnapshot.docChanges().forEach((change) => {\r\n          const docData = { id: change.doc.id, ...change.doc.data() };\r\n  \r\n          if (change.type === \"added\") {\r\n            newData.unshift(docData);\r\n          }\r\n        });\r\n  \r\n        setSensorData((prevData) => [...newData, ...prevData]);\r\n        setIsError(false);\r\n        setIsLoading(false);\r\n      },\r\n      (error) => {\r\n        console.error(\"Error fetching real-time data:\", error);\r\n        setIsError(true);\r\n        setIsLoading(false);\r\n      }\r\n    );\r\n  \r\n    return () => unsubscribe();\r\n  }, []);\r\n  \r\n\r\n  // opens modal\r\n  const onRowClick = (data) => {\r\n    setModal({content: <SensorDataInfo data={data.original} />, size: \"modalFull\"})\r\n  };\r\n\r\n  // columns for the table\r\n  const columns = [\r\n    {\r\n      accessorKey: \"user_name\",\r\n      header: \"User Name\",\r\n      size: 50\r\n    },\r\n    {\r\n      accessorKey: \"sensor_id\",\r\n      header: \"Sensor\"\r\n    },\r\n    {\r\n      accessorKey: \"raw1\",\r\n      header: \"Lactate(Raw 1)\"\r\n    },\r\n    {\r\n      accessorKey: \"raw2\",\r\n      header: \"Lactate(Raw 2)\"\r\n    },\r\n    {\r\n      accessorKey: \"raw3\",\r\n      header: \"Lactate(Raw 3)\"\r\n    },\r\n    {\r\n      accessorKey: \"timestamp\",\r\n      header: \"Timestamp\",\r\n      Cell: ({ cell }) => {\r\n        const value = cell.getValue();\r\n        if (!value)\r\n          return (\r\n            <p className={`px-.5 font-normal text-red-600 whitespace-nowrap`}>\r\n              Missing\r\n            </p>\r\n          );\r\n        else return formatDate(value, DATE_TIME_FORMAT_1);\r\n      },\r\n      filterFn: customDateFilter,  \r\n    }\r\n  ];\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"py-8 flex flex-col space-y-2 md:items-baseline md:flex-row md:justify-between\">\r\n        <h1 className=\"text-2xl md:text-3xl font-bold\">\r\n          All Sensor Data\r\n        </h1>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <MainContainer>\r\n          <LoadingSpinner size=\"40px\" className=\"h-[223px]\" />\r\n        </MainContainer>\r\n      ) : isError ? (\r\n        <MainContainer>\r\n          <p className=\"text-red-500\">Failed to load data.</p>\r\n        </MainContainer>\r\n      ) : (\r\n        <DisplayTablePagination\r\n          tableData={sensorData}\r\n          columns={columns}\r\n          maxHeight=\"420px\"\r\n          onRowClick={onRowClick}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WaterSystemPage;\r\n"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","_ref","children","header","onEdit","isDisable","disableReason","_jsxs","className","_jsx","onClick","title","fontSize","xs","sm","md","lg","xl","_paginationProps$rows","_paginationProps$show","tableData","columns","keyName","handleBottomButton","showBottomButton","showFullScreenOption","initialState","newButtonName","paginationProps","rowsPerPageOptions","showRowsPerPage","onRowClick","enablePagination","enableColumnOrdering","enableHiding","enableColumnResizing","maxHeight","isBottomButtonDisable","renderPanel","topButton","showTopButton","handleTopButton","value","rowVirtualizerInstanceRef","useRef","materialReactTableThemeLight","createTheme","components","MuiIconButton","styleOverrides","root","color","MuiTableSortLabel","table","useMaterialReactTable","data","getRowId","row","density","enableColumnActions","enableDensityToggle","enableFilters","enableStickyHeader","enableStickyFooter","enableFullScreenToggle","enableTopToolbar","enableBottomToolbar","paginationDisplayMode","enableRowVirtualization","rowVirtualizerOptions","overscan","muiTableHeadCellProps","sx","fontWeight","borderWidth","opacity","muiTablePaperProps","elevation","height","display","flexDirection","padding","muiTableContainerProps","muiTableBodyProps","muiBottomToolbarProps","justifyContent","muiTopToolbarProps","renderBottomToolbarCustomActions","Button","isPrimaryButton","disabled","renderTopToolbarCustomActions","_ref2","filteredData","getFilteredRowModel","rows","map","original","type","checked","readOnly","CSVLink","filename","muiTableBodyRowProps","_ref3","event","cursor","muiPaginationProps","showFirstButton","showLastButton","siblingCount","size","renderDetailPanel","_ref4","Box","width","ThemeProvider","theme","MaterialReactTable","DATE_TIME_FORMAT_1","formatLabel","label","match","customDateFilter","columnId","filterValue","_cellValue$includes","cellValue","getValue","includes","formatDate","inputDateString","dateObject","Date","userTimezoneOffset","getTimezoneOffset","localDateObject","getTime","getMonth","toString","padStart","getDate","getFullYear","getHours","getMinutes","getSeconds","toLocaleDateString","year","month","day","SensorDataInfo","RenderData","key","arguments","length","undefined","isNotEmpty","isNotEmptyOrNull","obj","trim","MainContainer","WaterSystemPage","setModal","useOutletContext","isLoading","setIsLoading","useState","isError","setIsError","sensorData","setSensorData","useEffect","unsubscribe","onSnapshot","collection","querySnapshot","newData","docChanges","forEach","change","docData","id","doc","unshift","prevData","error","console","accessorKey","Cell","cell","filterFn","_Fragment","LoadingSpinner","DisplayTablePagination","content"],"sourceRoot":""}