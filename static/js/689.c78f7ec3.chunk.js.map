{"version":3,"file":"static/js/689.c78f7ec3.chunk.js","mappings":"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","sources":["components/container/MainContainer.jsx","utility/Utility.js","pages/HomePage.jsx"],"sourcesContent":["const MainContainer = ({\r\n  children,\r\n  header = \" \",\r\n  onEdit,\r\n  isDisable = false,\r\n  disableReason = \"Not Allowed\",\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`w-full bg-white px-4 md:px-8 rounded-xl`}\r\n    >\r\n      {header && (\r\n        <div className=\"flex items-end gap-[5px] mb-8\">\r\n          <h2 className=\"font-bold text-xl md:text-2xl\">{header}</h2>\r\n          {onEdit && (\r\n            <p\r\n              className={`text-xl font-bold ${\r\n                isDisable\r\n                  ? \"cursor-not-allowed text-gray-500\"\r\n                  : \"cursor-pointer text-accent hover:text-amber-700 duration-100\"\r\n              }`}\r\n              onClick={isDisable ? () => {} : onEdit}\r\n              title={isDisable ? disableReason : \"\"}\r\n            >\r\n              (edit)\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nexport const DATE_TIME_FORMAT_1 = \"MM/dd/yyyy HH:mm:ss\";\r\nexport const DATE_FORMAT_1 = \"yyyy-MM-dd\";\r\nexport const DATE_FORMAT_2 = \"MM/dd/yyyy\";\r\n\r\nexport const formatLabel = (label) => {\r\n  const match = label.match(/(.*) \\((.*)\\)/);\r\n  if (match) {\r\n    return (\r\n      <div className=\"flex items-center gap-[5px]\">\r\n        <h3 className=\"font-bold\">{match[1]}</h3>\r\n        <span>({match[2]})</span>\r\n      </div>\r\n    );\r\n  }\r\n  return <h3 className=\"font-bold\">{label}</h3>;\r\n};\r\n\r\n\r\nexport const materialReactTableThemeDark = createTheme({\r\n  components: {\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"& .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n          \"&:hover .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n          \"&.Mui-active .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiTableSortLabel: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"& .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n          \"&:hover .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n          \"&.Mui-active .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const materialReactTableThemeLight = createTheme({\r\n  components: {\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"& .MuiSvgIcon-root\": {\r\n            color: \"#707070 !important\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiTableSortLabel: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"& .MuiSvgIcon-root\": {\r\n            color: \"#707070 !important\",\r\n          },\r\n          \"&:hover .MuiSvgIcon-root\": {\r\n            color: \"#ffffff !important\",\r\n          },\r\n          \"&.Mui-active .MuiSvgIcon-root\": {\r\n            color: \"#707070 !important\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\n// to check empty and \"\" string\r\nexport const isNotEmptyOrNull = (obj, key) => {\r\n  // Check if obj is a string\r\n  if (typeof obj === \"string\") {\r\n    return obj.trim().length > 0 && obj !== \"null\";\r\n  }\r\n\r\n  // Check if obj is an object and not null\r\n  if (typeof obj !== \"object\" || obj === null) {\r\n    return false;\r\n  }\r\n\r\n  // Check if the key exists in the object\r\n  if (!(key in obj)) {\r\n    return false;\r\n  }\r\n\r\n  const value = obj[key];\r\n\r\n  // Check if the value is not null and not undefined\r\n  if (value === null || value === undefined) {\r\n    return false;\r\n  }\r\n\r\n  // Check if the value is a non-empty string\r\n  if (typeof value === \"string\") {\r\n    return value.trim().length > 0;\r\n  }\r\n\r\n  // For other types, consider them as not empty\r\n  return true;\r\n};\r\n\r\nexport const customDateFilter = (row, columnId, filterValue) => {\r\n  const cellValue = row.getValue(columnId);\r\n  return cellValue?.includes(filterValue) ?? false;\r\n};\r\n\r\nexport const formatDate = (inputDateString, type) => {\r\n  if (!inputDateString) return \"\";\r\n  const dateObject = new Date(inputDateString);\r\n\r\n  // Adjust for time zone offset\r\n  const userTimezoneOffset = dateObject.getTimezoneOffset() * 60000;\r\n  const localDateObject = new Date(dateObject.getTime() + userTimezoneOffset);\r\n\r\n  if (type === DATE_TIME_FORMAT_1)\r\n    return `${(localDateObject.getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, \"0\")}/${localDateObject\r\n      .getDate()\r\n      .toString()\r\n      .padStart(2, \"0\")}/${localDateObject.getFullYear()} ${localDateObject\r\n      .getHours()\r\n      .toString()\r\n      .padStart(2, \"0\")}:${localDateObject\r\n      .getMinutes()\r\n      .toString()\r\n      .padStart(2, \"0\")}:${localDateObject\r\n      .getSeconds()\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  else if (type === DATE_FORMAT_1)\r\n    return `${localDateObject.getFullYear()}-${(localDateObject.getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, \"0\")}-${localDateObject\r\n      .getDate()\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  else if (type === DATE_FORMAT_2)\r\n    return localDateObject.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n    });\r\n};\r\n\r\nexport const downloadCSV = (sensorId, data, startTime = null, endTime = null) => {\r\n  if (!data.length) return;\r\n\r\n  const start = startTime ? new Date(startTime).getTime() : null;\r\n  const end = endTime ? new Date(endTime).getTime() : null;\r\n\r\n  // Filter by timestamp if range provided\r\n  const filteredData = data.filter(row => {\r\n    const ts = new Date(row.timestamp).getTime();\r\n    return (!start || ts >= start) && (!end || ts <= end);\r\n  });\r\n\r\n  if (!filteredData.length) return;\r\n\r\n  const headers = Object.keys(filteredData[0]);\r\n  const rows = filteredData.map(row =>\r\n    headers.map(h => JSON.stringify(row[h] ?? \"\"))\r\n  );\r\n\r\n  const csvContent = [headers, ...rows].map(e => e.join(\",\")).join(\"\\n\");\r\n  const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n\r\n  const link = document.createElement(\"a\");\r\n  link.href = URL.createObjectURL(blob);\r\n  link.setAttribute(\"download\", `${sensorId}_data.csv`);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { collection, query, where, onSnapshot } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\r\nimport MainContainer from \"../components/container/MainContainer\";\r\nimport { Box, FormControl, FormControlLabel, InputLabel, MenuItem, Select, OutlinedInput, Checkbox, ListItemText } from \"@mui/material\";\r\nimport { LineChart } from \"@mui/x-charts/LineChart\";\r\nimport dayjs from \"dayjs\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport { downloadCSV } from \"../utility/Utility\";\r\nimport { FaDownload } from \"react-icons/fa6\";\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport { Tooltip } from \"@mui/material\";\r\n\r\nconst WaterSystemPage = () => {\r\n  // get users from outlet context higher in the component tree\r\n  const { users } = useOutletContext()\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [sensorData, setSensorData] = useState([]);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [sensorOptions, setSensorOptions] = useState(['Sensor 1', 'Sensor 2']);\r\n  const [selectedSensors, setSelectedSensors] = useState([])\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [endTime, setEndTime] = useState(null);\r\n  const [combineCharts, setCombineCharts] = useState(false)\r\n  \r\n  \r\n  // useEffect\r\n  useEffect(() => {\r\n\r\n    if (!selectedUsers) return;\r\n    let unsubscribeSensorData;\r\n\r\n    if (selectedUsers.length > 0) {\r\n      // Default to the first two sensors\r\n      if (selectedSensors.length === 0) setSelectedSensors(sensorOptions);\r\n\r\n      setIsLoading(true);\r\n  \r\n      const q = query(\r\n        collection(db, \"lactate_data\"),\r\n        where(\"user_name\", \"in\", selectedUsers.slice(0, 10))\r\n      );\r\n    \r\n      unsubscribeSensorData = onSnapshot(\r\n        q,\r\n        (querySnapshot) => {\r\n          let data = [];\r\n    \r\n          querySnapshot.forEach((doc) => {\r\n            const rawData = doc.data();\r\n    \r\n            if (typeof rawData.timestamp === \"number\") {\r\n              rawData.timestamp = new Date(rawData.timestamp * 1000).toISOString();\r\n            }\r\n            data.push(rawData);\r\n          });\r\n    \r\n          data = data.filter((d) => selectedSensors.includes(d.sensor_id));\r\n          data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n          setSensorData(data);\r\n          setIsError(false);\r\n          setIsLoading(false);\r\n        },\r\n        (error) => {\r\n          console.error(\"Error fetching filtered data:\", error);\r\n          setIsError(true);\r\n          setIsLoading(false);\r\n        }\r\n      );\r\n    }\r\n\r\n    setIsLoading(false);\r\n    return () => {\r\n      if (unsubscribeSensorData) unsubscribeSensorData();\r\n    };\r\n  }, [selectedUsers, selectedSensors]);\r\n\r\n  // range filter\r\n  const isWithinRange = (timestamp) => {\r\n    const ts = new Date(timestamp).getTime();\r\n    const start = startTime ? startTime.toDate().getTime() : null;\r\n    const end = endTime ? endTime.toDate().getTime() : null;\r\n  \r\n    return (!start || ts >= start) && (!end || ts <= end);\r\n  };\r\n  \r\n  // lactate series data\r\n  const getSensorSeries = (sensorId, lactateKey) => {\r\n    return sensorData\r\n      .filter((d) => d.sensor_id === sensorId && isWithinRange(d.timestamp))\r\n      .map((d) => d[lactateKey]);\r\n  };\r\n  \r\n  // timsetamps\r\n  const getSensorTimestampsAsDates = (sensorId) => {\r\n    return sensorData\r\n      .filter((d) => d.sensor_id === sensorId && isWithinRange(d.timestamp))\r\n      .map((d) => new Date(d.timestamp));\r\n  };\r\n  \r\n\r\n  // 3 charts for each sensor\r\n  const renderChartsForSensor = (sensorId) => {\r\n    // get the last measurement\r\n    const latestData = sensorData\r\n      .filter((d) => d.sensor_id === sensorId)\r\n      .at(-1);\r\n\r\n    const chartData = sensorData.filter((d) => d.sensor_id === sensorId);\r\n  \r\n    return (\r\n      <React.Fragment key={sensorId}>\r\n        <div className=\"mt-10 mb-4\">\r\n          <div className=\"flex justify-between\">\r\n            <h1 className=\"text-2xl font-bold text-Black-400 pb-4\">{sensorId}</h1>\r\n            <Tooltip title={`Download data for ${sensorId}`}>\r\n              <span>\r\n                <FaDownload\r\n                  className=\"cursor-pointer\"\r\n                  onClick={() => downloadCSV(sensorId, chartData, startTime, endTime)}\r\n                />\r\n              </span>\r\n            </Tooltip>\r\n          </div>\r\n          {latestData && (\r\n            <div className=\"grid grid-cols-3 gap-4 text-gray-700 pb-2 border-b\">\r\n              <p>Temperature:<b className=\"pl-2\">{latestData.temperature}</b></p>\r\n              <p>Connection Status:<b className=\"pl-2\">{`${latestData.connection_status_flag}`}</b></p>\r\n              <p>Wear Status:<b className=\"pl-2\">{`${latestData.wearing_status_flag}`}</b></p>\r\n            </div>\r\n        )}\r\n        </div>\r\n        \r\n        {/* separate graphs for channels */}\r\n        {\r\n          !combineCharts && \r\n          <div>\r\n            <div className=\"w-full overflow-x-auto\">\r\n            <div className=\"min-w-[800px]\">\r\n              <LineChart\r\n                margin={{ left: 0, top: 20, right: 20, bottom: 30 }}\r\n                height={300}\r\n                series={[{ data: getSensorSeries(sensorId, \"ohm1\"), label: \"Lactate\", showMark: false }]}\r\n                xAxis={[\r\n                  {\r\n                    scaleType: \"time\",\r\n                    data: getSensorTimestampsAsDates(sensorId),\r\n                  },\r\n                ]}\r\n                tooltip={{\r\n                  valueFormatter: (value, context) =>\r\n                    `Time: ${dayjs(context.dataIndex !== undefined ? getSensorTimestampsAsDates(sensorId)[context.dataIndex] : \"\").format(\"YYYY-MM-DD HH:mm:ss\")}`,\r\n                }}   \r\n              />\r\n            </div>\r\n            </div>\r\n            <h3 className=\"text-lg text-black mt-8 pb-4 text-center\"><b>Lactate (Channel 1)</b> : <b className=\"pb-4 text-green-600\">{latestData?.ohm1 ?? \"\"}</b></h3>\r\n      \r\n            <hr className=\"border-t border-gray-300 my-8 w-full\" />\r\n      \r\n            <div className=\"w-full overflow-x-auto\">\r\n              <div className=\"min-w-[800px]\">\r\n                <LineChart\r\n                  margin={{ left: 0, top: 20, right: 20, bottom: 30 }}\r\n                  height={300}\r\n                  series={[{ data: getSensorSeries(sensorId, \"ohm3\"), label: \"Lactate\", showMark: false }]}\r\n                  xAxis={[\r\n                    {\r\n                      scaleType: \"time\",\r\n                      data: getSensorTimestampsAsDates(sensorId),\r\n                    },\r\n                  ]}\r\n                  tooltip={{\r\n                    valueFormatter: (value, context) =>\r\n                      `Time: ${dayjs(context.dataIndex !== undefined ? getSensorTimestampsAsDates(sensorId)[context.dataIndex] : \"\").format(\"YYYY-MM-DD HH:mm:ss\")}`,\r\n                  }}   \r\n                />\r\n              </div>\r\n            </div>\r\n            <h3 className=\"text-lg text-black mt-8 pb-4 text-center\"><b>Lactate (Channel 2)</b> : <b className=\"pb-4 text-green-600\">{latestData?.ohm1 ?? \"\"}</b></h3>\r\n      \r\n            <hr className=\"border-t border-gray-300 my-8 w-full\" />\r\n      \r\n            <div className=\"w-full overflow-x-auto\">\r\n              <div className=\"min-w-[800px]\">\r\n                <LineChart\r\n                  margin={{ left: 0, top: 20, right: 20, bottom: 30 }}\r\n                  height={300}\r\n                  series={[{ data: getSensorSeries(sensorId, \"ohm3\"), label: \"Lactate\", showMark: false }]}\r\n                  xAxis={[\r\n                    {\r\n                      scaleType: \"time\",\r\n                      data: getSensorTimestampsAsDates(sensorId),\r\n                    },\r\n                  ]}\r\n                  tooltip={{\r\n                    valueFormatter: (value, context) =>\r\n                      `Time: ${dayjs(context.dataIndex !== undefined ? getSensorTimestampsAsDates(sensorId)[context.dataIndex] : \"\").format(\"YYYY-MM-DD HH:mm:ss\")}`,\r\n                  }}        \r\n                />\r\n              </div>\r\n            </div>\r\n            <h3 className=\"text-lg text-black mt-8 pb-4 text-center\"><b>Lactate (Channel 3)</b> : <b className=\"pb-4 text-green-600\">{latestData?.ohm1 ?? \"\"}</b></h3>\r\n          </div>\r\n\r\n          \r\n        }\r\n\r\n\r\n        {/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */}\r\n        \r\n        {/* combined into one */}\r\n        {\r\n          combineCharts && \r\n          <div className=\"w-full overflow-x-auto\">\r\n            <div className=\"min-w-[800px]\">\r\n              <LineChart\r\n                margin={{ left: 0, top: 20, right: 20, bottom: 30 }}\r\n                height={350}\r\n                xAxis={[\r\n                  {\r\n                    scaleType: \"time\",\r\n                    data: getSensorTimestampsAsDates(sensorId),\r\n                  },\r\n                ]}\r\n                series={[\r\n                  {\r\n                    data: getSensorSeries(sensorId, \"ohm1\"),\r\n                    label: `Lactate - Channel 1 : ${latestData.ohm1}`,\r\n                    showMark: false,\r\n                  },\r\n                  {\r\n                    data: getSensorSeries(sensorId, \"ohm2\"),\r\n                    label: `Lactate - Channel 2 : ${latestData.ohm2}`,\r\n                    showMark: false,\r\n                  },\r\n                  {\r\n                    data: getSensorSeries(sensorId, \"ohm3\"),\r\n                    label: `Lactate - Channel 3 : ${latestData.ohm3}`,\r\n                    showMark: false,\r\n                  },\r\n                ]}\r\n                tooltip={{\r\n                  valueFormatter: (value, context) =>\r\n                    `Time: ${dayjs(\r\n                      context.dataIndex !== undefined\r\n                        ? getSensorTimestampsAsDates(sensorId)[context.dataIndex]\r\n                        : \"\"\r\n                    ).format(\"YYYY-MM-DD HH:mm:ss\")}`,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  \r\n  \r\n  // JSX\r\n  return (\r\n    <>\r\n      <div className=\"py-8 flex flex-col space-y-2 md:items-baseline md:flex-row md:justify-between\">\r\n        <h1 className=\"text-2xl md:text-3xl font-bold\">Sensor Data Charts</h1>\r\n      </div>\r\n      <Box className=\"w-full flex items-center justify-between mb-4 flex-wrap gap-4\">\r\n        <div className=\"flex gap-4 flex-wrap\">\r\n          {/* User Name Filter */}\r\n          <FormControl sx={{ minWidth: 250 }}>\r\n            <InputLabel>User Name</InputLabel>\r\n            <Select\r\n              value={selectedUsers}\r\n              onChange={(e) => setSelectedUsers([e.target.value])}\r\n              input={<OutlinedInput label=\"User Name\" />}\r\n              renderValue={(selected) => selected.join(', ')}\r\n            >\r\n              {users.map((name) => (\r\n                <MenuItem key={name} value={name}>\r\n                  <ListItemText primary={name} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Sensor ID Filter */}\r\n          {\r\n            selectedUsers.length > 0 &&\r\n            <FormControl sx={{ minWidth: 250 }}>\r\n              <InputLabel>Sensor ID</InputLabel>\r\n              <Select\r\n                multiple\r\n                value={selectedSensors}\r\n                onChange={(e) => setSelectedSensors(e.target.value)}\r\n                input={<OutlinedInput label=\"Sensor ID\" />}\r\n                renderValue={(selected) => selected.join(', ')}\r\n              >\r\n                {sensorOptions.map((sensor) => (\r\n                  <MenuItem key={sensor} value={sensor}>\r\n                    <Checkbox checked={selectedSensors.includes(sensor)} />\r\n                    <ListItemText primary={sensor} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n          </FormControl>\r\n          }\r\n\r\n          {\r\n            selectedSensors.length > 0 && \r\n            <FormControl sx={{minWidth: 250}}>\r\n              <div className=\"flex\">\r\n                <DateTimePicker\r\n                  label=\"Start Time\"\r\n                  value={startTime}\r\n                  onChange={(newValue) => setStartTime(newValue)}\r\n                  slotProps={{ textField: { size: \"medium\", sx: { minWidth: 180 } } }}\r\n                />\r\n                <DateTimePicker\r\n                  label=\"End Time\"\r\n                  value={endTime}\r\n                  onChange={(newValue) => setEndTime(newValue)}\r\n                  slotProps={{ textField: { size: \"medium\", sx: { minWidth: 180, ml: 2 } } }}\r\n                />\r\n              </div>\r\n            </FormControl>\r\n          }\r\n\r\n          {\r\n            selectedSensors.length > 0 &&\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={combineCharts}\r\n                  onChange={(e) => setCombineCharts(e.target.checked)}\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label=\"Combine graphs\"\r\n              sx={{ ml: 2, mt: 1 }}\r\n            />\r\n          }\r\n\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => {\r\n            downloadCSV(\"combined_sensor_data\", sensorData, startTime, endTime)\r\n          }}\r\n          className=\"text-sm bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md\"\r\n        >\r\n          Download User Data\r\n        </button>\r\n      </Box>\r\n\r\n\r\n\r\n      {isLoading ? (\r\n        <MainContainer>\r\n          <LoadingSpinner size=\"40px\" className=\"h-[223px]\" />\r\n        </MainContainer>\r\n      ) : isError ? (\r\n        <MainContainer>\r\n          <p className=\"text-red-500\">Failed to load data.</p>\r\n        </MainContainer>\r\n      ) : selectedUsers.length === 0 || selectedSensors.length === 0? (\r\n        <MainContainer>\r\n          <p className=\"text-black text-lg pb-10\">👋 Select a user to view sensor data.</p>\r\n        </MainContainer>\r\n      ) : (\r\n        <MainContainer>\r\n          {selectedSensors.map(renderChartsForSensor)}\r\n        </MainContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WaterSystemPage;\r\n"],"names":["_ref","children","header","onEdit","isDisable","disableReason","_jsxs","className","_jsx","onClick","title","createTheme","components","MuiIconButton","styleOverrides","root","color","MuiTableSortLabel","downloadCSV","sensorId","data","startTime","arguments","length","undefined","endTime","start","Date","getTime","end","filteredData","filter","row","ts","timestamp","headers","Object","keys","rows","map","h","_row$h","JSON","stringify","csvContent","e","join","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","WaterSystemPage","users","useOutletContext","isLoading","setIsLoading","useState","isError","setIsError","sensorData","setSensorData","selectedUsers","setSelectedUsers","sensorOptions","setSensorOptions","selectedSensors","setSelectedSensors","setStartTime","setEndTime","combineCharts","setCombineCharts","useEffect","unsubscribeSensorData","q","query","collection","db","where","slice","onSnapshot","querySnapshot","forEach","doc","rawData","toISOString","push","d","includes","sensor_id","sort","a","b","error","console","isWithinRange","toDate","getSensorSeries","lactateKey","getSensorTimestampsAsDates","_Fragment","Box","FormControl","sx","minWidth","InputLabel","Select","value","onChange","target","input","OutlinedInput","label","renderValue","selected","name","MenuItem","ListItemText","primary","multiple","sensor","Checkbox","checked","DateTimePicker","newValue","slotProps","textField","size","ml","FormControlLabel","control","mt","MainContainer","LoadingSpinner","_latestData$ohm","_latestData$ohm2","_latestData$ohm3","latestData","at","chartData","React","Tooltip","FaDownload","temperature","connection_status_flag","wearing_status_flag","LineChart","margin","left","top","right","bottom","height","series","showMark","xAxis","scaleType","tooltip","valueFormatter","context","dayjs","dataIndex","format","ohm1","ohm2","ohm3"],"sourceRoot":""}